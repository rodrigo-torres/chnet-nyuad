shared_memory3 only used:
	- by map methods to pass values from a scan file to shared memory
	- by the same map methods to compute the given integral of any pixel
	- by the same map methods to pass an spectrum buffer to the visualization window
	- by the same map methods to create a vector of x, y coordinates
shared_memory2 used:
	- to store ~ 10 daq flags and variables used by map methods and tty methods
	- by map methods to populate the shared_memory3
	- by the ADCXRF to store map and spectra info

Both can be eliminated to improve performance and facilitate the instrument to adapt to larger scopes

For shared_memory3 the strategy is:
	- arrange a linked list in predictable manner (as in always l->r top->bottom) then:
	- a "meta map structure" stores information about the map 
	- this reduces complexity and computing times of search algorithms
	- a static spectrum buffer can then populated directly from these vectors and structures

For shared_memory2 the strategy is:
	- migrate daq flags and variables to a different shared memory block
	- loading a scan file populates a structure like this:
		- positions are stored as members of the structure
		- events are stored inside a member vector of the structure
		- the latest vector is joined to the previous pixel in a linked list structure
	- the ADCXRF program writes directly to the disk (we can afford it with an SSD)

